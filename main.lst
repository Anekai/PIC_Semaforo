CCS PCM C Compiler, Version 5.015, 5967               01-jan-21 16:21

               Filename:   C:\Users\T-Gamer\Documents\PIC Projects\Semáforo\main.lst

               ROM used:   84 words (2%)
                           Largest free fragment is 2048
               RAM used:   6 (2%) at main() level
                           7 (2%) worst case
               Stack used: 1 locations
               Stack size: 8

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   019
0003:  NOP
.................... #include <main.h> 
.................... #include <16F88.h> 
.................... //////////// Standard Header file for the PIC16F88 device //////////////// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996, 2013 Custom Computer Services          //// 
.................... //// This source code may only be used by licensed users of the CCS C  //// 
.................... //// compiler.  This source code may only be distributed to other      //// 
.................... //// licensed users of the CCS C compiler.  No other use, reproduction //// 
.................... //// or distribution is permitted without written permission.          //// 
.................... //// Derivative programs created using this software in object code    //// 
.................... //// form are not restricted in any way.                               //// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... #device PIC16F88 
....................  
.................... #list 
....................  
.................... #device ADC=16 
....................  
.................... #FUSES NOWDT                 	//No Watch Dog Timer 
.................... #FUSES NOMCLR                	//Master Clear pin used for I/O 
.................... #FUSES NOBROWNOUT            	//No brownout reset 
.................... #FUSES NOLVP                 	//No low voltage prgming, B3(PIC16) or B5(PIC18) used for I/O 
....................  
.................... #use delay(crystal=4MHz) 
0004:  MOVLW  22
0005:  MOVWF  04
0006:  BCF    03.7
0007:  MOVF   00,W
0008:  BTFSC  03.2
0009:  GOTO   018
000A:  MOVLW  01
000B:  MOVWF  78
000C:  CLRF   77
000D:  DECFSZ 77,F
000E:  GOTO   00D
000F:  DECFSZ 78,F
0010:  GOTO   00C
0011:  MOVLW  4A
0012:  MOVWF  77
0013:  DECFSZ 77,F
0014:  GOTO   013
0015:  GOTO   016
0016:  DECFSZ 00,F
0017:  GOTO   00A
0018:  RETURN
....................  
....................  
....................  
.................... void main() 
0019:  MOVF   03,W
001A:  ANDLW  1F
001B:  MOVWF  03
001C:  BSF    03.5
001D:  BCF    1F.4
001E:  BCF    1F.5
001F:  MOVF   1B,W
0020:  ANDLW  80
0021:  MOVWF  1B
0022:  MOVLW  07
0023:  MOVWF  1C
0024:  BCF    03.7
.................... { 
....................    while (true) { 
....................       output_high(pin_b0); 
0025:  BCF    06.0
0026:  BCF    03.5
0027:  BSF    06.0
....................       output_low(pin_b1); 
0028:  BSF    03.5
0029:  BCF    06.1
002A:  BCF    03.5
002B:  BCF    06.1
....................     
....................       delay_ms(3500); 
002C:  MOVLW  0E
002D:  MOVWF  21
002E:  MOVLW  FA
002F:  MOVWF  22
0030:  CALL   004
0031:  DECFSZ 21,F
0032:  GOTO   02E
....................     
....................       output_low(pin_b0); 
0033:  BSF    03.5
0034:  BCF    06.0
0035:  BCF    03.5
0036:  BCF    06.0
....................       output_high(pin_b2); 
0037:  BSF    03.5
0038:  BCF    06.2
0039:  BCF    03.5
003A:  BSF    06.2
....................        
....................       delay_ms(2000); 
003B:  MOVLW  08
003C:  MOVWF  21
003D:  MOVLW  FA
003E:  MOVWF  22
003F:  CALL   004
0040:  DECFSZ 21,F
0041:  GOTO   03D
....................        
....................       output_low(pin_b2); 
0042:  BSF    03.5
0043:  BCF    06.2
0044:  BCF    03.5
0045:  BCF    06.2
....................       output_high(pin_b1); 
0046:  BSF    03.5
0047:  BCF    06.1
0048:  BCF    03.5
0049:  BSF    06.1
....................        
....................       delay_ms(1000); 
004A:  MOVLW  04
004B:  MOVWF  21
004C:  MOVLW  FA
004D:  MOVWF  22
004E:  CALL   004
004F:  DECFSZ 21,F
0050:  GOTO   04C
0051:  BSF    03.5
0052:  GOTO   025
....................    } 
.................... } 
0053:  SLEEP

Configuration Fuses:
   Word  1: 3F01   NOWDT PUT XT NOMCLR NOBROWNOUT NOLVP NOCPD NOWRT NODEBUG CCPB0 NOPROTECT
   Word  2: 3FFF   FCMEN IESO
